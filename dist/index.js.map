{"version":3,"file":"index.js","sources":["../src/utils/masonry.ts","../src/components/HorizontalMasonry.tsx"],"sourcesContent":["const findNextFittingWidth = (\n  widths: number[],\n  ignoreIndices: Set<number>,\n  maxWidth: number,\n): { index: number; width: number } | undefined => {\n  for (let i = 0; i < widths.length; i++)\n    if (!ignoreIndices.has(i) && widths[i] < maxWidth)\n      return { index: i, width: widths[i] };\n};\n\nexport const calculateHorizontalMasonry = (\n  widths: number[],\n  maxWidth: number,\n  gap: number = 0,\n): number[] => {\n  const length = widths.length;\n  const sortedWidths = widths.toSorted((w1, w2) => w2 - w1);\n\n  const resultWidths: number[] = [];\n  const ignoreIndices = new Set<number>();\n  let row = [];\n  let rowWidth = 0;\n\n  while (ignoreIndices.size != length) {\n    const next = findNextFittingWidth(\n      sortedWidths,\n      ignoreIndices,\n      maxWidth - rowWidth,\n    );\n\n    if (!next) {\n      resultWidths.push(...row);\n      row = [];\n      rowWidth = 0;\n    } else {\n      const { index, width } = next;\n      row.push(width);\n      ignoreIndices.add(index);\n      rowWidth += width + gap;\n    }\n  }\n  resultWidths.push(...row);\n\n  return resultWidths.map((width) => widths.indexOf(width));\n};\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { calculateHorizontalMasonry } from \"../utils\";\n\ninterface Props {\n  children: React.ReactNode[];\n  className?: string;\n  gap?: number;\n}\n\nconst HorizontalMasonry = ({ children, className, gap = 1 }: Props) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [orderedChildren, setOrderedChildren] = useState(children);\n\n  useEffect(() => {\n    if (containerRef.current) {\n      const rect = containerRef.current.getBoundingClientRect();\n\n      const widths = Array.from(\n        containerRef.current.children,\n        (item) => item.getBoundingClientRect().width,\n      );\n\n      const indices = calculateHorizontalMasonry(widths, rect.width, gap);\n\n      setOrderedChildren(indices.map((index) => children[index]));\n    }\n  }, [children]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className ? className : \"flex flex-wrap\"}\n    >\n      {orderedChildren}\n    </div>\n  );\n};\nexport default HorizontalMasonry;\n"],"names":["useRef","useState","useEffect","React"],"mappings":"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"}